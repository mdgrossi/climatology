
---
title: "Virginia Key, FL"
image: ../../images/vkfl.JPG
format:
  dashboard:
    logo: ../../images/vkfl.JPG
    scrolling: false
---

```{python}
#| include: False

# SET THE DIRECTORY NAME
dirName = 'virginiaKeyFl'

# ENTER THE FLOOD THRESHOLDS FOR THIS SITE
# https://water.noaa.gov/gauges/vakf1
flood_thresholds = {
    'major': 2.5,
    'moderate': 1.7,
    'minor': 1.3
    }
```

# {.sidebar}

```{python}
import pytz
from datetime import datetime as dt
from IPython.display import Markdown

est = pytz.timezone('US/Eastern')
display(Markdown(f"**{dt.now(tz=est).date().strftime('%A, %B %d, %Y')}**<br>"))

```

::: {.card}
![](../../images/vkfl.JPG){scale="75%"}
:::

<br>
[**Virginia Key**](https://en.wikipedia.org/wiki/Virginia_Key){target="_blank"} is a small barrier island in southeast Florida with a **tropical monsoon climate** characterized by hot, humid summers and warm, dry winters. It is located east of Miami, south of Miami Beach, and north of Key Biscayne in Biscayne Bay. The [NOAA](https://www.noaa.gov){target="_blank"} [weather station](https://tidesandcurrents.noaa.gov/stationhome.html?id=8723214){target="_blank"} has been installed on a pier at the [University of Miami](https://welcome.miami.edu){target="_blank"} [Rosenstiel School of Marine, Atmospheric, and Earth Science](https://earth.miami.edu){target="_blank"} since February 1994.

<iframe src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d42461.70157812699!2d-80.17255246551831!3d25.73753395804339!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sus!4v1704939462365!5m2!1sen!2sus" align="right" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>


# Plots

```{python}
#| include: False
import os
import sys
import xarray as xr
from bokeh.io import output_notebook
sys.path.append('/home/runner/work/climatology/climatology')
from clipy import plot

# DIRECTORY
HOME = '../../'
dirName = os.path.join(HOME, dirName)

# READ IN STATS
daily_stats = xr.load_dataset(os.path.join(dirName, 'statistics-daily.nc'))
monthly_stats = xr.load_dataset(os.path.join(dirName, 'statistics-monthly.nc'))

```

## Dashboard {.tabset}

```{python}
#| output: asis
#| title: Daily Stats
output_notebook(hide_banner=True)
display(Markdown('::: {.panel-tabset}'))

for var in daily_stats.variable.values:
    display(Markdown(f'\n## {var} ({daily_stats.attrs[f"{var} units"]})\n\n'))
    plot.daily_climo(data=daily_stats, var=var, scheme='mg',
                    flood_thresholds=flood_thresholds)
    display(Markdown(' '))

display(Markdown(':::'))

```

```{python}
#| output: asis
#| title: Monthly Stats

display(Markdown('::: {.panel-tabset}'))

for var in monthly_stats.variable.values:
    display(Markdown(f'\n## {var} ({monthly_stats.attrs[f"{var} units"]})\n\n'))
    plot.monthly_climo(data=monthly_stats, var=var, scheme='mg')
    display(Markdown(' '))

display(Markdown(':::'))

```

```{python}
#| output: asis
#| title: Daily Records Set By Year 

display(Markdown('::: {.panel-tabset}'))

for var in daily_stats.variable.values:
    display(Markdown(f'\n## {var} ({daily_stats.attrs[f"{var} units"]})\n\n'))
    plot.histograms(stats=daily_stats, var=var, scheme='mg')
    display(Markdown(' '))

display(Markdown(':::'))

```

```{python}
#| output: asis
#| title: Monthly Records Set By Year 

display(Markdown('::: {.panel-tabset}'))

for var in monthly_stats.variable.values:
    display(Markdown(f'\n## {var} ({monthly_stats.attrs[f"{var} units"]})\n\n'))
    plot.histograms(stats=monthly_stats, var=var, scheme='mg')
    display(Markdown(' '))

display(Markdown(':::'))

```

### Water Level Trend

```{=html}
{{< include ../../virginiaKeyFl/trend-waterlevel.html >}}
```

# Data

## Row {.tabset}

```{python}
#| output: asis
#| title: Daily Stats

display(Markdown('::: {.panel-tabset}'))

for var in daily_stats.variable.values:
    display(Markdown(f'\n### {var} ({daily_stats.attrs[f"{var} units"]})\n\n'))
    plot.gtable(daily_stats, var)
    display(Markdown(' '))

display(Markdown(':::'))

```

```{python}
#| output: asis
#| title: Monthly Stats

display(Markdown('::: {.panel-tabset}'))

for var in monthly_stats.variable.values:
    display(Markdown(f'\n### {var} ({monthly_stats.attrs[f"{var} units"]})\n\n'))
    plot.gtable(monthly_stats, var)
    display(Markdown(' '))

display(Markdown(':::'))

```
